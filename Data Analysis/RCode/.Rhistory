color = "Stage") +
theme_minimal()
#Plot1
# Convert the data into longer format - each stage bump date has its own row
data_long <- data %>%
pivot_longer(
cols = matches("^Stage\\.|^Last\\."),
names_to = "Stage",
values_to = "Date"
) %>%
# Mutates the date into ymd format for R to understand and process
mutate(Date = ymd(Date)) %>%
# Filter out NA dates
filter(!is.na(Date))
# Create the grouped scatter plot
ggplot(data_long, aes(x = Date, y = Title, color = Stage)) +
geom_point(size = 1) +
labs(title = "Proposal Stage Timeline by Title",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
data_long <- data %>%
pivot_longer(
cols = starts_with("Stage."),
names_to = "Stage",
values_to = "Date"
) %>%
mutate(Date = ymd(Date)) %>%
filter(!is.na(Date))
# Create horizontal boxplots per Title
ggplot(data_long, aes(x = Date, y = Title)) +
geom_boxplot(outlier.shape = 8, outlier.size = 2.5, fill = "white") +
geom_point(aes(color = Stage), size = 1) +
labs(title = "Stage Date Distribution per Proposal",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
# Compute duration per Title
data_long <- data_long %>%
group_by(Title) %>%
mutate(Duration = as.numeric(max(Date) -min(Date))) %>%
ungroup()
# Plot
ggplot(data_long, aes(x = Date, y = reorder(Title, -Duration))) +
geom_boxplot(outlier.shape = 8, outlier.size = 2.5, fill = "white") +
geom_point(aes(color = Stage), size = 1) +
labs(
title = "Stage Date Spread per Proposal",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
# Recompute duration in months
title_durations <- data_long %>%
group_by(Title) %>%
mutate(
MonthsSinceStart = interval(min(Date), Date) %/% months(1),
Duration = interval(min(Date), max(Date))%/% months(1))
# Plot
ggplot(title_durations, aes(x = MonthsSinceStart, y = reorder(Title, -Duration))) +
geom_boxplot(outlier.shape = 8, outlier.size = 2.5, fill = "white") +
geom_point(aes(color = Stage), size = 1) +
labs(title = "Stage Date Spread per Proposal",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
#Plot1
# Convert the data into longer format - each stage bump date has its own row
data_long <- data %>%
pivot_longer(
cols = matches("^Stage\\.|^Last\\."),
names_to = "Stage",
values_to = "Date"
) %>%
# Mutates the date into ymd format for R to understand and process
mutate(Date = ymd(Date)) %>%
# Filter out NA dates
filter(!is.na(Date))
# Create the grouped scatter plot
ggplot(data_long, aes(x = Date, y = Title, color = Stage)) +
geom_point(size = 1) +
labs(title = "Proposal Stage Timeline by Title",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
data_long <- data %>%
pivot_longer(
cols = starts_with("Stage."),
names_to = "Stage",
values_to = "Date"
) %>%
mutate(Date = ymd(Date)) %>%
filter(!is.na(Date))
# Create horizontal boxplots per Title
ggplot(data_long, aes(x = Date, y = Title)) +
geom_boxplot(outlier.shape = 8, outlier.size = 2.5, fill = "white") +
geom_point(aes(color = Stage), size = 1) +
labs(title = "Stage Date Distribution per Proposal",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
# Compute duration per Title
data_long <- data_long %>%
group_by(Title) %>%
mutate(Duration = as.numeric(max(Date) -min(Date))) %>%
ungroup()
# Plot
ggplot(data_long, aes(x = Date, y = reorder(Title, -Duration))) +
geom_boxplot(outlier.shape = 8, outlier.size = 2.5, fill = "white") +
geom_point(aes(color = Stage), size = 1) +
labs(
title = "Stage Date Spread per Proposal",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
# Recompute duration in months
title_durations <- data_long %>%
group_by(Title) %>%
mutate(
MonthsSinceStart = interval(min(Date), Date) %/% months(1),
Duration = interval(min(Date), max(Date))%/% months(1))
# Plot
ggplot(title_durations, aes(x = MonthsSinceStart, y = reorder(Title, -Duration))) +
geom_boxplot(outlier.shape = 8, outlier.size = 2.5, fill = "white") +
geom_point(aes(color = Stage), size = 1) +
labs(title = "Stage Date Spread per Proposal",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
install.packages("readr")
install.packages("readr")
data <- list.files(path="../CSVFiles") %>% lapply(read_csv) %>% bind_rows
#Plot1
# Convert the data into longer format - each stage bump date has its own row
data_long <- data %>%
pivot_longer(
cols = matches("^Stage\\.|^Last\\."),
names_to = "Stage",
values_to = "Date"
) %>%
# Mutates the date into ymd format for R to understand and process
mutate(Date = ymd(Date)) %>%
# Filter out NA dates
filter(!is.na(Date))
# Create the grouped scatter plot
ggplot(data_long, aes(x = Date, y = Title, color = Stage)) +
geom_point(size = 1) +
labs(title = "Proposal Stage Timeline by Title",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
data <- list.files(path="../CSVFiles") %>% lapply(read_csv) %>% bind_rows
View(data)
data <- list.files(path="../CSVFiles") %>%
lapply(read_csv) %>%
bind_rows
View(data)
data <- list.files(path="../CSVFiles") %>%
lapply(read_csv) %>%
bind_rows
library(lubridate)
data <- list.files(path="../CSVFiles") %>%
lapply(read_csv) %>%
bind_rows
data <- list.files(path = "../CSVFiles", pattern = "\\.csv$", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows()
View(data)
read_csv(file, col_types = cols(
`Last Commit` = col_character()
))
# Custom reader to force Last Commit as character
read_consistent <- function(file) {
read_csv(file, col_types = cols(
`Last Commit` = col_character()
))
}
data <- list.files(path = "../CSVFiles", pattern = "\\.csv$", full.names = TRUE) %>%
lapply(read_consistent) %>%
bind_rows()
View(data)
#Plot1
# Convert the data into longer format - each stage bump date has its own row
data_long <- data %>%
pivot_longer(
cols = matches("^Stage\\.|^Last\\."),
names_to = "Stage",
values_to = "Date"
) %>%
# Mutates the date into ymd format for R to understand and process
mutate(Date = ymd(Date)) %>%
# Filter out NA dates
filter(!is.na(Date))
# Create the grouped scatter plot
ggplot(data_long, aes(x = Date, y = Title, color = Stage)) +
geom_point(size = 1) +
labs(title = "Proposal Stage Timeline by Title",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
View(data_long)
View(read_consistent)
data <- read.csv("../CSVFiles/Stage 4.csv")
#Plot1
# Convert the data into longer format - each stage bump date has its own row
data_long <- data %>%
pivot_longer(
cols = matches("^Stage\\.|^Last\\."),
names_to = "Stage",
values_to = "Date"
) %>%
# Mutates the date into ymd format for R to understand and process
mutate(Date = ymd(Date)) %>%
# Filter out NA dates
filter(!is.na(Date))
# Create the grouped scatter plot
ggplot(data_long, aes(x = Date, y = Title, color = Stage)) +
geom_point(size = 1) +
labs(title = "Proposal Stage Timeline by Title",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
data_long <- data %>%
pivot_longer(
cols = starts_with("Stage."),
names_to = "Stage",
values_to = "Date"
) %>%
mutate(Date = ymd(Date)) %>%
filter(!is.na(Date))
# Create horizontal boxplots per Title
ggplot(data_long, aes(x = Date, y = Title)) +
geom_boxplot(outlier.shape = 8, outlier.size = 2.5, fill = "white") +
geom_point(aes(color = Stage), size = 1) +
labs(title = "Stage Date Distribution per Proposal",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
# Compute duration per Title
data_long <- data_long %>%
group_by(Title) %>%
mutate(Duration = as.numeric(max(Date) -min(Date))) %>%
ungroup()
# Plot
ggplot(data_long, aes(x = Date, y = reorder(Title, -Duration))) +
geom_boxplot(outlier.shape = 8, outlier.size = 2.5, fill = "white") +
geom_point(aes(color = Stage), size = 1) +
labs(
title = "Stage Date Spread per Proposal",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
# Recompute duration in months
title_durations <- data_long %>%
group_by(Title) %>%
mutate(
MonthsSinceStart = interval(min(Date), Date) %/% months(1),
Duration = interval(min(Date), max(Date))%/% months(1))
# Plot
ggplot(title_durations, aes(x = MonthsSinceStart, y = reorder(Title, -Duration))) +
geom_boxplot(outlier.shape = 8, outlier.size = 2.5, fill = "white") +
geom_point(aes(color = Stage), size = 1) +
labs(title = "Stage Date Spread per Proposal",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
getwd()
setwd("~/Documents/code/tc39_proposals_project/Data Analysis")
getwd()
setwd("~/Documents/code/tc39_proposals_project/Data Analysis/CSVFiles")
getwd()
list.files()
#setwd in CSVFiles
file_list <- list.files()
load_files <- lapply(file_list, read.csv)
data <- do.call("rbind", ldf)
View(data)
View(data_long)
#Plot1
# Convert the data into longer format - each stage bump date has its own row
data_long <- data %>%
pivot_longer(
cols = matches("^Stage\\.|^Last\\."),
names_to = "Stage",
values_to = "Date"
) %>%
# Mutates the date into ymd format for R to understand and process
mutate(Date = ymd(Date)) %>%
# Filter out NA dates
filter(!is.na(Date))
# Create the grouped scatter plot
ggplot(data_long, aes(x = Date, y = Title, color = Stage)) +
geom_point(size = 1) +
labs(title = "Proposal Stage Timeline by Title",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
#setwd in CSVFiles
file_list <- list.files()
#setwd in CSVFiles
file_list <- list.files()
load_files <- lapply(file_list, read.csv)
data <- do.call("rbind", ldf)
#Plot1
# Convert the data into longer format - each stage bump date has its own row
data_long <- data %>%
pivot_longer(
cols = matches("^Stage\\.|^Last\\."),
names_to = "Stage",
values_to = "Date"
) %>%
# Mutates the date into ymd format for R to understand and process
mutate(Date = ymd(Date)) %>%
# Filter out NA dates
filter(!is.na(Date))
# Create the grouped scatter plot
ggplot(data_long, aes(x = Date, y = Title, color = Stage)) +
geom_point(size = 1) +
labs(title = "Proposal Stage Timeline by Title",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
#Plot1
# Convert the data into longer format - each stage bump date has its own row
data_long <- data %>%
pivot_longer(
cols = matches("^Stage\\.|^Last\\."),
names_to = "Stage",
values_to = "Date"
) %>%
# Mutates the date into ymd format for R to understand and process
mutate(Date = ymd(Date)) %>%
# Filter out NA dates
filter(!is.na(Date))
# Create the grouped scatter plot
ggplot(data_long, aes(x = Date, y = Title, color = Stage)) +
geom_point(size = 1) +
labs(title = "Proposal Stage Timeline by Title",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
#setwd in CSVFiles
file_list <- list.files()
load_files <- lapply(file_list, read.csv)
data <- do.call("rbind", load_files)
View(data)
#Plot1
# Convert the data into longer format - each stage bump date has its own row
data_long <- data %>%
pivot_longer(
cols = matches("^Stage\\.|^Last\\."),
names_to = "Stage",
values_to = "Date"
) %>%
# Mutates the date into ymd format for R to understand and process
mutate(Date = ymd(Date)) %>%
# Filter out NA dates
filter(!is.na(Date))
#setwd in CSVFiles
file_list <- list.files()
load_files <- lapply(file_list, read.csv)
data <- do.call("rbind", load_files)
#Plot1
# Convert the data into longer format - each stage bump date has its own row
data_long <- data %>%
pivot_longer(
cols = matches("^Stage\\.|^Last\\."),
names_to = "Stage",
values_to = "Date"
) %>%
# Mutates the date into ymd format for R to understand and process
mutate(Date = ymd(Date)) %>%
# Filter out NA dates
filter(!is.na(Date))
# Create the grouped scatter plot
ggplot(data_long, aes(x = Date, y = Title, color = Stage)) +
geom_point(size = 1) +
labs(title = "Proposal Stage Timeline by Title",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
data_long <- data %>%
pivot_longer(
cols = starts_with("Stage."),
names_to = "Stage",
values_to = "Date"
) %>%
mutate(Date = ymd(Date)) %>%
filter(!is.na(Date))
# Create horizontal boxplots per Title
ggplot(data_long, aes(x = Date, y = Title)) +
geom_boxplot(outlier.shape = 8, outlier.size = 2.5, fill = "white") +
geom_point(aes(color = Stage), size = 1) +
labs(title = "Stage Date Distribution per Proposal",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
# Compute duration per Title
data_long <- data_long %>%
group_by(Title) %>%
mutate(Duration = as.numeric(max(Date) -min(Date))) %>%
ungroup()
# Plot
ggplot(data_long, aes(x = Date, y = reorder(Title, -Duration))) +
geom_boxplot(outlier.shape = 8, outlier.size = 2.5, fill = "white") +
geom_point(aes(color = Stage), size = 1) +
labs(
title = "Stage Date Spread per Proposal",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
# Recompute duration in months
title_durations <- data_long %>%
group_by(Title) %>%
mutate(
MonthsSinceStart = interval(min(Date), Date) %/% months(1),
Duration = interval(min(Date), max(Date))%/% months(1))
# Plot
ggplot(title_durations, aes(x = MonthsSinceStart, y = reorder(Title, -Duration))) +
geom_boxplot(outlier.shape = 8, outlier.size = 2.5, fill = "white") +
geom_point(aes(color = Stage), size = 1) +
labs(title = "Stage Date Spread per Proposal",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
#Plot1
# Convert the data into longer format - each stage bump date has its own row
data_long <- data %>%
pivot_longer(
cols = matches("^Stage\\.|^Last\\."),
names_to = "Stage",
values_to = "Date"
) %>%
# Mutates the date into ymd format for R to understand and process
mutate(Date = ymd(Date)) %>%
# Filter out NA dates
filter(!is.na(Date))
# Create the grouped scatter plot
ggplot(data_long, aes(x = Date, y = Title, color = Stage)) +
geom_point(size = 1) +
labs(title = "Proposal Stage Timeline by Title",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
data_long <- data %>%
pivot_longer(
cols = starts_with("Stage."),
names_to = "Stage",
values_to = "Date"
) %>%
mutate(Date = ymd(Date)) %>%
filter(!is.na(Date))
# Create horizontal boxplots per Title
ggplot(data_long, aes(x = Date, y = Title)) +
geom_boxplot(outlier.shape = 8, outlier.size = 2.5, fill = "white") +
geom_point(aes(color = Stage), size = 1) +
labs(title = "Stage Date Distribution per Proposal",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
# Compute duration per Title
data_long <- data_long %>%
group_by(Title) %>%
mutate(Duration = as.numeric(max(Date) -min(Date))) %>%
ungroup()
# Plot
ggplot(data_long, aes(x = Date, y = reorder(Title, -Duration))) +
geom_boxplot(outlier.shape = 8, outlier.size = 2.5, fill = "white") +
geom_point(aes(color = Stage), size = 1) +
labs(
title = "Stage Date Spread per Proposal",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
# Recompute duration in months
title_durations <- data_long %>%
group_by(Title) %>%
mutate(
MonthsSinceStart = interval(min(Date), Date) %/% months(1),
Duration = interval(min(Date), max(Date))%/% months(1))
# Plot
ggplot(title_durations, aes(x = MonthsSinceStart, y = reorder(Title, -Duration))) +
geom_boxplot(outlier.shape = 8, outlier.size = 2.5, fill = "white") +
geom_point(aes(color = Stage), size = 1) +
labs(title = "Stage Date Spread per Proposal",
x = "Date",
y = "Proposal Title",
color = "Stage") +
theme_minimal()
